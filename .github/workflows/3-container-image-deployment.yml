name: 3) Container Image Deployment [Continuous Deployment]

on:
  # Run every time a change is pushed to 'release'.
  push:
    branches: [release]
  workflow_dispatch: # Allow manual execution of this workflow
    
# Define environment variables for the workflow.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      
    steps:
      # Perform checkout of the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Authorize action to the GHCR
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # Extract meta info like tags, labels
      - name: Extract metadata for container image
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  
      # Set up docker buildx to build the image
      - name: Set up Buildx action
        uses: docker/setup-buildx-action@v1
  
      # Build the image using buildx
      - name: Build Container image
        run: |
          docker buildx create --use
          docker buildx inspect
          docker buildx build \
            --file Dockerfile \
            --tag gatekeeper:latest \
            --label "org.opencontainers.image.source=${{ env.IMAGE_NAME }}" \
            --label "org.opencontainers.image.description=GateKeeper" \
            --label "org.opencontainers.image.licenses=MIT" \
            .
            
      # Push the image to the registry
      - name: Build and push container image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: latest  # Use only the "latest" tag
          labels: ${{ steps.meta.outputs.labels }}
